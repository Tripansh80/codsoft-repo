#include <bits/stdc++.h>

using namespace std;

struct Task
{
    string description;
    bool completed;
};

void displayTodoList(const vector<Task> &todoList)
{
    cout << "To-Do List:" << endl;
    for (size_t i = 0; i < todoList.size(); ++i)
    {
        cout << i + 1 << ". ";
        if (todoList[i].completed)
        {
            cout << "[Completed] ";
        }
        cout << todoList[i].description << endl;
    }
}

void addTask(vector<Task> &todoList, const string &description)
{
    Task task;
    task.description = description;
    task.completed = false;
    todoList.push_back(task);
    cout << "Task added!" << endl;
}

void markTaskCompleted(vector<Task> &todoList, size_t taskIndex)
{
    if (taskIndex >= 0 && taskIndex < todoList.size())
    {
        todoList[taskIndex].completed = true;
        cout << "Task marked as completed!" << endl;
    }
    else
    {
        cout << "Invalid task index. Task not found." << endl;
    }
}

void removeTask(vector<Task> &todoList, size_t taskIndex)
{
    if (taskIndex >= 0 && taskIndex < todoList.size())
    {
        todoList.erase(todoList.begin() + taskIndex);
        cout << "Task removed!" << endl;
    }
    else
    {
        cout << "Invalid task index. Task not found." << endl;
    }
}

int main()
{
    vector<Task> todoList;
    string taskDescription;
    char choice;

    cout << "To-Do List Manager" << endl;

    do
    {
        cout << "\nMenu:\n";
        cout << "1. Add a task\n";
        cout << "2. View the to-do list\n";
        cout << "3. Mark a task as completed\n";
        cout << "4. Remove a task\n";
        cout << "5. Quit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice)
        {
        case '1':
            cout << "Enter a task to add: ";
            cin.ignore();
            getline(cin, taskDescription);
            addTask(todoList, taskDescription);
            break;
        case '2':
            displayTodoList(todoList);
            break;
        case '3':
            size_t taskIndex;
            cout << "Enter the index of the task to mark as completed: ";
            cin >> taskIndex;
            markTaskCompleted(todoList, taskIndex - 1);
            break;
        case '4':
            size_t removeIndex;
            cout << "Enter the index of the task to remove: ";
            cin >> removeIndex;
            removeTask(todoList, removeIndex - 1);
            break;
        case '5':
            cout << "Goodbye!" << endl;
            break;
        default:
            cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != '5');

    return 0;
}
